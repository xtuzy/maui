parameters:
- name: platform
  type: string
  default: ''

- name: poolName
  type: string
  default: ''

- name: provisionatorChannel
  type: string
  default: 'latest'

- name: artifact
  type: string
  default: 'nuget'

- name: nugetFolder
  type: string
  default: 'artifacts'
  

- name: prepareSteps
  type: stepList
  default: []

- name: gitHubToken
  type: string
  default: $(github--pat--vs-mobiletools-engineering-service2)

- name: checkoutDirectory
  type: string
  default: $(System.DefaultWorkingDirectory)

steps:
  - template: provision.yml
    parameters:
      checkoutDirectory: ${{ parameters.checkoutDirectory }}
      platform: ${{ parameters.platform }}
      poolName: ${{ parameters.poolName }}
      provisionatorChannel: ${{ parameters.provisionatorChannel }}
      gitHubToken: ${{ parameters.gitHubToken }}

  - ${{ each step in parameters.prepareSteps }}:
    - ${{ each pair in step }}:
        ${{ pair.key }}: ${{ pair.value }}

  - pwsh: ./build.ps1 --target=dotnet --configuration="Release" --verbosity=diagnostic --nugetsource="${{ parameters.nugetFolder }}"
    displayName: 'Install .NET'
    retryCountOnTaskFailure: 3
    env:
      DOTNET_TOKEN: $(dotnetbuilds-internal-container-read-token)
      PRIVATE_BUILD: $(PrivateBuild)
  - pwsh: ./build.ps1 --target=dotnet-pack --configuration="Release" --verbosity=diagnostic --nugetsource="${{ parameters.nugetFolder }}"
    displayName: 'Pack .NET Maui'
    name: PackMaui
    env:
      DOTNET_TOKEN: $(dotnetbuilds-internal-container-read-token)
      PRIVATE_BUILD: $(PrivateBuild)
  - ${{ if eq(parameters.platform, 'Windows') }}:
    - pwsh: ./build.ps1 --target=dotnet-diff --configuration="Release" --verbosity=diagnostic
      displayName: 'Diff .NET Maui artifacts with NuGet'
  # artifacts
  - task: CopyFiles@2
    condition: always()
    displayName: 'Copy files to staging'
    inputs:
      Contents: |
        artifacts/**/*.*nupkg
        artifacts/**/*.zip
        artifacts/vs-workload.props
        eng/automation/SignList.xml
        !artifacts/docs-packs/**
      TargetFolder: $(build.artifactstagingdirectory)
      flattenFolders: true
  - task: CopyFiles@2
    condition: always()
    displayName: 'Copy metadata to staging'
    inputs:
      SourceFolder: artifacts
      Contents: |
        metadata/**
        api-diff/**
      TargetFolder: $(build.artifactstagingdirectory)
  - task: CopyFiles@2
    displayName: 'Copy Log Files'
    condition: always()
    inputs:
      Contents: |
        artifacts/logs/**
      TargetFolder: $(build.artifactstagingdirectory)/logs
      flattenFolders: true
  - task: PublishBuildArtifacts@1
    condition: always()
    displayName: publish artifacts
    inputs:
      ArtifactName: ${{ parameters.artifact }}
  # xml-docs
  - ${{ if eq(parameters.platform, 'Windows') }}:
    - task: PublishBuildArtifacts@1
      condition: always()
      displayName: publish docs artifacts
      inputs:
        PathToPublish: artifacts/docs-packs
        ArtifactName: xml-docs

